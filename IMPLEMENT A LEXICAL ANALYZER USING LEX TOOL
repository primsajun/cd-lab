%{
/* Program to recognize a C program */
#include <stdio.h>
int COMMENT = 0; // Variable to track comments
int cnt = 0;     // Counter for comments
%}

identifier [a-zA-Z][a-zA-Z0-9]*

%%

#.*                 { printf("Preprocessor directive: %s\n", yytext); }

int|float|char|double { printf("Keyword: %s\n", yytext); }

"/*"                { COMMENT = 1; }
"*/"                { COMMENT = 0; cnt++; }

{identifier}\(      { if (!COMMENT) printf("Function: %s\n", yytext); }

\{                 { if (!COMMENT) printf("Block begins\n"); }

\}                 { if (!COMMENT) printf("Block ends\n"); }

{identifier}(\[[0-9]*\])? { if (!COMMENT) printf("Identifier: %s\n", yytext); }

\".*\"              { if (!COMMENT) printf("String: %s\n", yytext); }

[0-9]+              { if (!COMMENT) printf("Number: %s\n", yytext); }

\(                  { ECHO; }

\<=|\>=|\<|==|\>     { if (!COMMENT) printf("Relational operator: %s\n", yytext); }

=                   { if (!COMMENT) printf("Assignment operator: %s\n", yytext); }

%%

int main(int argc, char **argv) {
    if (argc > 1) {
        FILE *file;
        file = fopen(argv[1], "r");
        if (!file) {
            printf("Could not open file %s\n", argv[1]);
            exit(0);
        }
        yyin = file;
    }
    yylex();
    printf("Total number of comments: %d\n", cnt);
    return 0;
}

int yywrap() {
    return 1;
}
